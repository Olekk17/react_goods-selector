{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","handleClearButtonClick","setState","handleAddButtonClick","good","this","className","length","type","onClick","map","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAKEC,uBAAyB,kBAAM,EAAKC,SAAS,CAAEF,aAAc,MAL/D,EAOEG,qBAAuB,SAACC,GAAD,OACrB,EAAKF,SAAS,CAAEF,aAAcI,KARlC,4CAWE,WAA2B,IAAD,OAChBJ,EAAiBK,KAAKN,MAAtBC,aAER,OACE,uBAAMM,UAAU,oBAAhB,UACGN,EAAaO,OAAS,EAEnB,qBAAID,UAAU,sCAAd,oBACMN,EADN,gBAIE,wBACE,UAAQ,cACRQ,KAAK,SACLF,UAAU,cACVG,QAASJ,KAAKJ,4BAIlB,oBAAIK,UAAU,QAAd,+BAEJ,uBAAOA,UAAU,QAAjB,SACE,gCACGT,EAAMa,KAAI,SAAAN,GAAI,OACb,qBAEE,UAAQ,OACRE,UAAWK,IACTX,IAAiBI,GAAQ,gCAJ7B,UAOE,6BACGJ,IAAiBI,EAEd,wBACE,UAAQ,YACRI,KAAK,SACLF,UAAU,SACVG,QAAS,kBACP,EAAKN,qBAAqBC,IAL9B,eAYA,wBACE,UAAQ,eACRI,KAAK,SACLF,UAAU,iBACVG,QAAS,EAAKR,uBAJhB,iBAWN,oBAAI,UAAQ,YAAYK,UAAU,eAAlC,SACGF,MAjCEA,iBApCrB,GAAyBQ,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ebe36e5d.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  handleClearButtonClick = () => this.setState({ selectedGood: '' });\n\n  handleAddButtonClick = (good: string) => (\n    this.setState({ selectedGood: good })\n  );\n\n  render(): React.ReactNode {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {selectedGood.length > 0\n          ? (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {`${selectedGood} is selected`}\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={this.handleClearButtonClick}\n              />\n            </h1>\n          )\n          : <h1 className=\"title\">No goods selected</h1>}\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => (\n              <tr\n                key={good}\n                data-cy=\"Good\"\n                className={classNames(\n                  selectedGood === good && 'has-background-success-light',\n                )}\n              >\n                <td>\n                  {selectedGood !== good\n                    ? (\n                      <button\n                        data-cy=\"AddButton\"\n                        type=\"button\"\n                        className=\"button\"\n                        onClick={() => (\n                          this.handleAddButtonClick(good)\n                        )}\n                      >\n                        +\n                      </button>\n                    )\n                    : (\n                      <button\n                        data-cy=\"RemoveButton\"\n                        type=\"button\"\n                        className=\"button is-info\"\n                        onClick={this.handleClearButtonClick}\n                      >\n                        -\n                      </button>\n                    )}\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}